{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Add any auth tokens here if needed\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response$data, _error$response2;\n  const apiError = {\n    detail: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'An error occurred',\n    status_code: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n  };\n  return Promise.reject(apiError);\n});\n\n// Document API\nexport const documentApi = {\n  upload: async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/documents/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  list: async params => {\n    const response = await api.get('/documents/', {\n      params\n    });\n    return response.data;\n  },\n  get: async id => {\n    const response = await api.get(`/documents/${id}`);\n    return response.data;\n  },\n  delete: async id => {\n    await api.delete(`/documents/${id}`);\n  },\n  search: async request => {\n    const response = await api.post('/documents/search', request);\n    return response.data;\n  },\n  getTypes: async () => {\n    const response = await api.get('/documents/types');\n    return response.data;\n  }\n};\n\n// Chat API\nexport const chatApi = {\n  createSession: async title => {\n    const response = await api.post('/chat/sessions', {\n      title\n    });\n    return response.data;\n  },\n  getSession: async sessionId => {\n    const response = await api.get(`/chat/sessions/${sessionId}`);\n    return response.data;\n  },\n  sendMessage: async request => {\n    const response = await api.post('/chat/message', request);\n    return response.data;\n  },\n  getSummary: async sessionId => {\n    const response = await api.get(`/chat/sessions/${sessionId}/summary`);\n    return response.data;\n  },\n  getSuggestions: async (sessionId, message) => {\n    const response = await api.post(`/chat/sessions/${sessionId}/suggestions`, {\n      message\n    });\n    return response.data;\n  },\n  deleteSession: async sessionId => {\n    await api.delete(`/chat/sessions/${sessionId}`);\n  },\n  listSessions: async () => {\n    const response = await api.get('/chat/sessions');\n    return response.data;\n  }\n};\n\n// Health check\nexport const healthApi = {\n  check: async () => {\n    const response = await axios.get(`${API_BASE_URL.replace('/api/v1', '')}/health`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","_error$response","_error$response$data","_error$response2","apiError","detail","data","status_code","status","documentApi","upload","file","formData","FormData","append","post","list","params","get","id","delete","search","getTypes","chatApi","createSession","title","getSession","sessionId","sendMessage","getSummary","getSuggestions","message","deleteSession","listSessions","healthApi","check","replace"],"sources":["/workspace/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport {\n  Document,\n  DocumentListResponse,\n  DocumentUploadResponse,\n  ChatSession,\n  ChatRequest,\n  ChatResponse,\n  SearchRequest,\n  SearchResponse,\n  DocumentType,\n  ApiError\n} from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    // Add any auth tokens here if needed\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error) => {\n    const apiError: ApiError = {\n      detail: error.response?.data?.detail || 'An error occurred',\n      status_code: error.response?.status,\n    };\n    return Promise.reject(apiError);\n  }\n);\n\n// Document API\nexport const documentApi = {\n  upload: async (file: File): Promise<DocumentUploadResponse> => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post('/documents/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  list: async (params?: {\n    skip?: number;\n    limit?: number;\n    document_type?: string;\n    status?: string;\n  }): Promise<DocumentListResponse> => {\n    const response = await api.get('/documents/', { params });\n    return response.data;\n  },\n\n  get: async (id: number): Promise<Document> => {\n    const response = await api.get(`/documents/${id}`);\n    return response.data;\n  },\n\n  delete: async (id: number): Promise<void> => {\n    await api.delete(`/documents/${id}`);\n  },\n\n  search: async (request: SearchRequest): Promise<SearchResponse> => {\n    const response = await api.post('/documents/search', request);\n    return response.data;\n  },\n\n  getTypes: async (): Promise<DocumentType> => {\n    const response = await api.get('/documents/types');\n    return response.data;\n  },\n};\n\n// Chat API\nexport const chatApi = {\n  createSession: async (title: string): Promise<ChatSession> => {\n    const response = await api.post('/chat/sessions', { title });\n    return response.data;\n  },\n\n  getSession: async (sessionId: string): Promise<ChatSession> => {\n    const response = await api.get(`/chat/sessions/${sessionId}`);\n    return response.data;\n  },\n\n  sendMessage: async (request: ChatRequest): Promise<ChatResponse> => {\n    const response = await api.post('/chat/message', request);\n    return response.data;\n  },\n\n  getSummary: async (sessionId: string): Promise<{ summary: string }> => {\n    const response = await api.get(`/chat/sessions/${sessionId}/summary`);\n    return response.data;\n  },\n\n  getSuggestions: async (sessionId: string, message: string): Promise<{ suggestions: string[] }> => {\n    const response = await api.post(`/chat/sessions/${sessionId}/suggestions`, { message });\n    return response.data;\n  },\n\n  deleteSession: async (sessionId: string): Promise<void> => {\n    await api.delete(`/chat/sessions/${sessionId}`);\n  },\n\n  listSessions: async (): Promise<{ sessions: any[]; total: number }> => {\n    const response = await api.get('/chat/sessions');\n    return response.data;\n  },\n};\n\n// Health check\nexport const healthApi = {\n  check: async (): Promise<{ status: string; app_name: string; version: string }> => {\n    const response = await axios.get(`${API_BASE_URL.replace('/api/v1', '')}/health`);\n    return response.data;\n  },\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}